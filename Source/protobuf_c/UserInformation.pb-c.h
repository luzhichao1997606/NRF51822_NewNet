/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: UserInformation.proto */

#ifndef PROTOBUF_C_UserInformation_2eproto__INCLUDED
#define PROTOBUF_C_UserInformation_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Card Card;
typedef struct _UserInformation UserInformation;
typedef struct _Heartbeat Heartbeat;


/* --- enums --- */


/* --- messages --- */

/*
 *卡片信息
 */
struct  _Card
{
  ProtobufCMessage base;
  /*
   *卡片包序号
   */
  int32_t cardsn;
  /*
   *卡片id "1234"
   */
  char *cardid;
  /*
   *卡片RSSI
   */
  int32_t cardrssi;
  /*
   *卡片电量
   */
  int32_t cardpower;
  /*
   *定位基站id "0001"
   */
  char *nodeid_1;
  /*
   *定位基站RSSI
   */
  int32_t noderssi_1;
  /*
   *定位基站电池状态
   */
  int32_t nodepower_1;
  /*
   *定位基站id
   */
  char *nodeid_2;
  /*
   *定位基站RSSI
   */
  int32_t noderssi_2;
  /*
   *定位基站电池状态
   */
  int32_t nodepower_2;
  /*
   *定位基站id
   */
  char *nodeid_3;
  /*
   *定位基站RSSI
   */
  int32_t noderssi_3;
  /*
   *定位基站电池状态
   */
  int32_t nodepower_3;
  /*
   *定位基站id
   */
  char *nodeid_4;
  /*
   *定位基站RSSI
   */
  int32_t noderssi_4;
  /*
   *定位基站电池状态
   */
  int32_t nodepower_4;
  /*
   *定位基站id
   */
  char *nodeid_5;
  /*
   *定位基站RSSI
   */
  int32_t noderssi_5;
  /*
   *定位基站电池状态
   */
  int32_t nodepower_5;
};
#define CARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&card__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, 0, 0 }


/*
 *Topic：/WSN_DW01/${CenterID}/event/Data		//发布数据包
 *数据类型
 */
struct  _UserInformation
{
  ProtobufCMessage base;
  /*
   *协议类型
   */
  char *protocoltype;
  /*
   *卡片信息列表
   */
  size_t n_cardlist;
  Card **cardlist;
};
#define USER_INFORMATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&user_information__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


/*
 *Topic：/WSN_DW01/${CenterID}/event/Heartbeat		//发布心跳包
 *数据类型
 */
struct  _Heartbeat
{
  ProtobufCMessage base;
  /*
   *协议类型
   */
  char *protocoltype;
  /*
   *心跳包序号
   */
  int32_t heartbeat;
  /*
   *产品型号
   */
  char *producttype;
  /*
   *软件版本
   */
  char *softversion;
  /*
   *配置参数标识，如果与后台保存的不一致，后台重新下发参数
   */
  int32_t configtag;
  /*
   *以下字段适用于ProtocolType:"GPRS"
   */
  /*
   * 当前位置区ID
   */
  char *lac;
  /*
   * 当前小区ID
   */
  char *cid;
  /*
   * 信号强度
   */
  int32_t csq;
  /*
   * 设备IMEI号
   */
  char *imei;
  /*
   * 设备IMSI号
   */
  char *imsi;
};
#define HEARTBEAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&heartbeat__descriptor) \
    , (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* Card methods */
void   card__init
                     (Card         *message);
size_t card__get_packed_size
                     (const Card   *message);
size_t card__pack
                     (const Card   *message,
                      uint8_t             *out);
size_t card__pack_to_buffer
                     (const Card   *message,
                      ProtobufCBuffer     *buffer);
Card *
       card__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   card__free_unpacked
                     (Card *message,
                      ProtobufCAllocator *allocator);
/* UserInformation methods */
void   user_information__init
                     (UserInformation         *message);
size_t user_information__get_packed_size
                     (const UserInformation   *message);
size_t user_information__pack
                     (const UserInformation   *message,
                      uint8_t             *out);
size_t user_information__pack_to_buffer
                     (const UserInformation   *message,
                      ProtobufCBuffer     *buffer);
UserInformation *
       user_information__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   user_information__free_unpacked
                     (UserInformation *message,
                      ProtobufCAllocator *allocator);
/* Heartbeat methods */
void   heartbeat__init
                     (Heartbeat         *message);
size_t heartbeat__get_packed_size
                     (const Heartbeat   *message);
size_t heartbeat__pack
                     (const Heartbeat   *message,
                      uint8_t             *out);
size_t heartbeat__pack_to_buffer
                     (const Heartbeat   *message,
                      ProtobufCBuffer     *buffer);
Heartbeat *
       heartbeat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   heartbeat__free_unpacked
                     (Heartbeat *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Card_Closure)
                 (const Card *message,
                  void *closure_data);
typedef void (*UserInformation_Closure)
                 (const UserInformation *message,
                  void *closure_data);
typedef void (*Heartbeat_Closure)
                 (const Heartbeat *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor card__descriptor;
extern const ProtobufCMessageDescriptor user_information__descriptor;
extern const ProtobufCMessageDescriptor heartbeat__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_UserInformation_2eproto__INCLUDED */
